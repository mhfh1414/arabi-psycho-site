# -*- coding: utf-8 -*-
# cbt_suite.py โ ููุญุฉ ุงุฎุชุจุงุฑุงุช CBT (ุงุณุชุจูุงูุงุช ููุงุณูุฉ) + ุญุณุงุจ ุงูุฏุฑุฌุงุช

from flask import Blueprint, render_template_string, request, redirect, url_for

cbt_bp = Blueprint("cbt_bp", __name__, url_prefix="/cbt")

BASE = """
<!doctype html><html lang="ar" dir="rtl"><head>
<meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>{{title}}</title>
<link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;600;800&display=swap" rel="stylesheet">
<style>
:root{--p1:#0b3a75;--p2:#0a65b0;--gold:#f4b400;--w:#fff;--glass:rgba(255,255,255,.08);--b:rgba(255,255,255,.14)}
*{box-sizing:border-box}body{margin:0;font-family:Tajawal,system-ui;background:linear-gradient(135deg,var(--p1),var(--p2)) fixed;color:#fff}
.wrap{max-width:1100px;margin:26px auto;padding:16px}
.card{background:var(--glass);border:1px solid var(--b);border-radius:16px;padding:18px}
a.btn,button.btn{display:inline-block;background:var(--gold);color:#2b1b02;border-radius:14px;padding:10px 14px;text-decoration:none;font-weight:800;border:none;cursor:pointer}
label{display:block;margin:8px 0;color:#ffe28a}
.q{margin:10px 0;padding:10px;border-radius:12px;border:1px solid var(--b)}
.grid{display:grid;grid-template-columns:repeat(auto-fit, minmax(260px,1fr));gap:14px}
.badge{display:inline-block;padding:4px 10px;border-radius:999px;font-size:.85rem;margin:4px 0}
.ok{background:#16a34a;color:#fff}.warn{background:#ef4444;color:#fff}.mid{background:#f59e0b;color:#1f1302}
</style></head><body><div class="wrap">
<div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:10px">
  <h2 style="margin:0">{{heading}}</h2>
  <div>
    <a class="btn" href="/">ุงููุงุฌูุฉ</a>
    <a class="btn" href="/cbt">ููุญุฉ ุงูุงุฎุชุจุงุฑุงุช</a>
  </div>
</div>
{{body|safe}}
</div></body></html>
"""

# ------------------ ููุญุฉ ุงูุงุฎุชุจุงุฑุงุช ------------------
@cbt_bp.route("/")
def hub():
    body = """
    <div class="card">
      <p>ุงุฎุชุฑ ุงุฎุชุจุงุฑูุง:</p>
      <div class="grid">
        <a class="btn" href="/cbt/phq9">PHQ-9 (ุงูุชุฆุงุจ)</a>
        <a class="btn" href="/cbt/gad7">GAD-7 (ููู)</a>
        <a class="btn" href="/cbt/dass21">DASS-21 (ุงูุชุฆุงุจ/ููู/ุชูุชุฑ)</a>
        <a class="btn" href="/cbt/pcl5">PCL-5 (ุตุฏูุฉ)</a>
        <a class="btn" href="/cbt/asrs">ASRS v1.1 (ADHD ุจุงูุบูู)</a>
        <a class="btn" href="/cbt/oci">OCI-R (ูุณูุงุณ ููุฑู)</a>
        <a class="btn" href="/cbt/audit">AUDIT / AUDIT-C (ูุญูู)</a>
        <a class="btn" href="/cbt/brs">BRS (ุงูุตููุฏ ุงูููุณู)</a>
      </div>
    </div>
    """
    return render_template_string(BASE, title="CBT | ููุญุฉ ุงูุงุฎุชุจุงุฑุงุช", heading="๐งช ุงุฎุชุจุงุฑุงุช ููุณูุฉ ูุดุฎุตูุฉ", body=body)

# ============ ุฃุฏูุงุช ุนุงูุฉ ูุจูุงุก ุงูููุงุฐุฌ ูุงููุชุงุฆุฌ ============
def _radio(name, options):
    html = []
    for i, (label, val) in enumerate(options):
        html.append(f'<label><input type="radio" name="{name}" value="{val}" required> {label}</label>')
    return "<div class='q'>" + "".join(html) + "</div>"

def _render_test(title, heading, items, scale, post_to):
    qs = []
    for idx, q in enumerate(items, 1):
        qs.append(f"<div><b>{idx}.</b> {q}{_radio(f'q{idx}', scale)}</div>")
    form = f"<form method='post'>{''.join(qs)}<button class='btn' type='submit'>ุงุญุณุจ ุงููุชูุฌุฉ</button></form>"
    return render_template_string(BASE, title=title, heading=heading, body=f"<div class='card'>{form}</div>")

def _score_from_form(n):
    s = 0
    for i in range(1, n+1):
        s += int(request.form.get(f"q{i}", 0))
    return s

# ============ PHQ-9 ============
PHQ9_ITEMS = [
    "ููุฉ ุงูุงูุชูุงู ุฃู ุงููุชุนุฉ ุจุงูููุงู ุจุงูุฃุดูุงุก",
    "ุงูุดุนูุฑ ุจุงูุงูุชุฆุงุจ ุฃู ุงููุฃุณ",
    "ุตุนูุจุฉ ุงูููู ุฃู ุงูููู ุงูุฒุงุฆุฏ",
    "ุงูุชุนุจ ุฃู ููุฉ ุงูุทุงูุฉ",
    "ุถุนู ุงูุดููุฉ ุฃู ุงูุฅูุฑุงุท ุจุงูุฃูู",
    "ุงูุดุนูุฑ ุจุณูุก ุชุฌุงู ุงูููุณ",
    "ุตุนูุจุฉ ุงูุชุฑููุฒ",
    "ุงูุชุญุฑู ุฃู ุงูููุงู ุจุจุทุก ุดุฏูุฏ ุฃู ุงูุนูุณ (ุชูุชุฑ)",
    "ุฃููุงุฑ ุจุฃูู ุณุชููู ุฃูุถู ูููุชูุง ุฃู ุฅูุฐุงุก ุงูููุณ"
]
PHQ9_SCALE = [("ุฃุจุฏูุง",0),("ุนุฏุฉ ุฃูุงู",1),("ุฃูุซุฑ ูู ุงููุตู",2),("ุชูุฑูุจูุง ูู ููู",3)]

@cbt_bp.route("/phq9", methods=["GET","POST"])
def phq9():
    if request.method=="GET":
        return _render_test("PHQ-9", "PHQ-9 โ ุงูุชุฆุงุจ", PHQ9_ITEMS, PHQ9_SCALE, "/cbt/phq9")
    total = _score_from_form(len(PHQ9_ITEMS))
    if   total<=4:   sev="ุทุจูุนู"; color="ok"
    elif total<=9:   sev="ุฎููู";  color="mid"
    elif total<=14:  sev="ูุชูุณุท"; color="mid"
    elif total<=19:  sev="ุดุฏูุฏ";  color="warn"
    else:            sev="ุดุฏูุฏ ุฌุฏูุง"; color="warn"
    body = f"""
    <div class="card">
      <h3>ุงููุชูุฌุฉ ุงููููุฉ: {total} / 27</h3>
      <span class="badge {color}">ุดุฏุฉ: {sev}</span>
      <p>ุฅุฐุง ููุฌุฏุช ุฃููุงุฑ ุฅูุฐุงุก ุงูููุณ (ุงูุณุคุงู 9) ุจุฏุฑุฌุฉ โฅ 1 ูุงุณุชุดุฑ ูุฎุชุตูุง ููุฑูุง.</p>
      <a class="btn" href="/cbt">ุนูุฏุฉ ูููุญุฉ</a>
    </div>"""
    return render_template_string(BASE, title="PHQ-9 ูุชูุฌุฉ", heading="PHQ-9 โ ุงููุชูุฌุฉ", body=body)

# ============ GAD-7 ============
GAD7_ITEMS = [
    "ุงูุดุนูุฑ ุจุงูุนุตุจูุฉ ุฃู ุงูููู ุฃู ุนูู ุงูุญุงูุฉ",
    "ุนุฏู ุงููุฏุฑุฉ ุนูู ุงูุชููู ุนู ุงูููู ุฃู ุงูุณูุทุฑุฉ ุนููู",
    "ุงูููู ุงูููุฑุท ุนูู ูุฎุชูู ุงูุฃููุฑ",
    "ุตุนูุจุฉ ุงูุงุณุชุฑุฎุงุก",
    "ุงูุชูุชุฑ ุจุญูุซ ูุตุนุจ ุงูุฌููุณ ุณุงูููุง",
    "ุงูุงูุฒุนุงุฌ ุฃู ุงูุถูู ุจุณูููุฉ",
    "ุงูุดุนูุฑ ุจุงูุฎูู ูุฃู ุดูุฆูุง ุณูุฆูุง ูุฏ ูุญุฏุซ"
]
GAD7_SCALE = PHQ9_SCALE

@cbt_bp.route("/gad7", methods=["GET","POST"])
def gad7():
    if request.method=="GET":
        return _render_test("GAD-7", "GAD-7 โ ููู ุนุงู", GAD7_ITEMS, GAD7_SCALE, "/cbt/gad7")
    total = _score_from_form(len(GAD7_ITEMS))
    if   total<=4:  sev="ุทุจูุนู"; color="ok"
    elif total<=9:  sev="ุฎููู";  color="mid"
    elif total<=14: sev="ูุชูุณุท"; color="mid"
    else:           sev="ุดุฏูุฏ";  color="warn"
    body = f"""
    <div class="card"><h3>ุงููุชูุฌุฉ ุงููููุฉ: {total} / 21</h3>
    <span class="badge {color}">ุดุฏุฉ: {sev}</span>
    <a class="btn" href="/cbt">ุนูุฏุฉ</a></div>"""
    return render_template_string(BASE, title="GAD-7 ูุชูุฌุฉ", heading="GAD-7 โ ุงููุชูุฌุฉ", body=body)

# ============ DASS-21 (3 ููุงููุณ) ============
DASS21_ITEMS = [
    # ุงูุชุฆุงุจ
    "ูุฌุฏุช ุตุนูุจุฉ ูู ุงูุดุนูุฑ ุจุงููุชุนุฉ",
    "ุดุนุฑุช ุจุฃูู ูุง ุฃูู ุจุงููุณุชูุจู",
    "ุดุนุฑุช ุจุงูุญุฒู ูุงูุงูุชุฆุงุจ",
    "ูู ุฃุณุชุทุน ุงูุดุนูุฑ ุจุงูุญูุงุณ ูุฃู ุดูุก",
    "ุดุนุฑุช ุจุฃู ูุง ูููุฉ ูู",
    "ูู ุฃุณุชุทุน ุงูุงุณุชูุฑุงุฑ ูู ุฃู ุดูุก",
    "ุดุนุฑุช ุฃู ุญูุงุชู ูุง ูุนูู ููุง",
    # ููู
    "ุดุนุฑุช ุจุฌูุงู ุงููู",
    "ุนุงููุช ูู ุถูู ูู ุงูุชููุณ ุจุฏูู ุฌูุฏ",
    "ุดุนุฑุช ุจุงูุงุฑุชุฌุงู (ุงูุชุฒุงุฒ)",
    "ุดุนุฑุช ุจุงูููู ูู ุงูุชุนุฑุถ ููููู ูุณุจุจ ุงูุฐุนุฑ",
    "ุดุนุฑุช ุจุงูุงูุฒุนุงุฌ ุงูุนุตุจู",
    "ุนุงููุช ูู ุถุฑุจุงุช ููุจ ุณุฑูุนุฉ ุฏูู ุฌูุฏ",
    "ุดุนุฑุช ุจุงูุฎูู ุจุฏูู ุณุจุจ ุฌูุฏ",
    # ุชูุชุฑ
    "ูุฌุฏุช ุตุนูุจุฉ ูู ุงูุงุณุชุฑุฎุงุก",
    "ููุช ุฃุชูุงุนู ุจุดูู ูุจุงูุบ ูุน ุงูููุงูู",
    "ุตุฑุช ุณุฑูุน ุงูุงููุนุงู",
    "ูุฌุฏุช ููุณู ูุถุทุฑุจูุง",
    "ุตุฑุช ุบูุฑ ูุชุณุงูุญ ูุน ุงูุนุฑููุฉ ูุงูุชุฃุฎูุฑ",
    "ููุช ูุชูุชุฑูุง ููุดุฏูุฏูุง"
]
DASS21_SCALE = [("ุฃุจุฏูุง",0),("ุฃุญูุงููุง",1),("ุบุงูุจูุง",2),("ุฏุงุฆููุง",3)]

@cbt_bp.route("/dass21", methods=["GET","POST"])
def dass21():
    if request.method=="GET":
        return _render_test("DASS-21", "DASS-21 โ ุงูุชุฆุงุจ/ููู/ุชูุชุฑ", DASS21_ITEMS, DASS21_SCALE, "/cbt/dass21")
    total = _score_from_form(len(DASS21_ITEMS))
    dep = sum(int(request.form.get(f"q{i}",0)) for i in range(1, 8)) * 2
    anx = sum(int(request.form.get(f"q{i}",0)) for i in range(8, 15)) * 2
    str_ = sum(int(request.form.get(f"q{i}",0)) for i in range(15, 22)) * 2
    def band(v, cut):
        for name, th in [("ุทุจูุนู",cut[0]),("ุฎููู",cut[1]),("ูุชูุณุท",cut[2]),("ุดุฏูุฏ",cut[3])]:
            if v<=th: return name
        return "ุดุฏูุฏ ุฌุฏูุง"
    dep_s = band(dep, (9,13,20,27))
    anx_s = band(anx, (7,9,14,19))
    str_s = band(str_, (14,18,25,33))
    body = f"""
    <div class="card">
      <h3>ุงููุฌุงููุน (ร2):</h3>
      <ul>
        <li>ุงูุชุฆุงุจ: <b>{dep}</b> โ {dep_s}</li>
        <li>ููู: <b>{anx}</b> โ {anx_s}</li>
        <li>ุชูุชุฑ: <b>{str_}</b> โ {str_s}</li>
      </ul>
      <a class="btn" href="/cbt">ุนูุฏุฉ</a>
    </div>"""
    return render_template_string(BASE, title="DASS-21 ูุชูุฌุฉ", heading="DASS-21 โ ุงููุชูุฌุฉ", body=body)

# ============ PCL-5 ============
PCL5_ITEMS = [
    "ุฐูุฑูุงุช ูุชุทููุฉ ูุฒุนุฌุฉ ุนู ุงูุญุฏุซ",
    "ุฃุญูุงู ูุฒุนุฌุฉ ูุชูุฑุฑุฉ ุนู ุงูุญุฏุซ",
    "ุฑุฏูุฏ ูุนู ููุงุฌูุฆุฉ ุนูุฏ ุงูุชุฐููุฑ ุจุงูุญุฏุซ",
    "ุชุฌูุจ ุงูุฃููุงุฑ ุฃู ุงููุดุงุนุฑ ุงููุชุนููุฉ ุจุงูุญุฏุซ",
    "ุชุฌูุจ ุงูููุงูู ุงูุชู ุชุฐูุฑ ุจุงูุญุฏุซ",
    "ุตุนูุจุฉ ุชุฐูุฑ ุฌูุงูุจ ูู ุงูุญุฏุซ",
    "ูุดุงุนุฑ ุณูุจูุฉ ูุณุชูุฑุฉ (ุฎูู/ุบุถุจ/ุฐูุจ/ุฎุฒู)",
    "ููุฏุงู ุงูุงูุชูุงู ุจุงูุฃูุดุทุฉ",
    "ุงูุดุนูุฑ ุจุงูุงููุตุงู ุนู ุงูุขุฎุฑูู",
    "ุตุนูุจุฉ ุงูุดุนูุฑ ุจุงููุดุงุนุฑ ุงูุฅูุฌุงุจูุฉ",
    "ุชููุฌ/ุงููุนุงู ุดุฏูุฏ",
    "ุณููู ูุชููุฑ ุฃู ูุฏูุฑ",
    "ุงูููุธุฉ ุงูููุฑุทุฉ",
    "ุตุนูุจุฉ ุงูุชุฑููุฒ",
    "ุตุนูุจุฉ ุงูููู"
]
PCL5_SCALE = [("ุฃุจุฏูุง",0),("ูููููุง",1),("ูุชูุณุท",2),("ุดุฏูุฏ",3),("ุดุฏูุฏ ุฌุฏูุง",4)]

@cbt_bp.route("/pcl5", methods=["GET","POST"])
def pcl5():
    if request.method=="GET":
        return _render_test("PCL-5", "PCL-5 โ ุฃุนุฑุงุถ ูุง ุจุนุฏ ุงูุตุฏูุฉ", PCL5_ITEMS, PCL5_SCALE, "/cbt/pcl5")
    total = _score_from_form(len(PCL5_ITEMS))
    flag = "ูุญุชูู ูุฌูุฏ ุงุถุทุฑุงุจ ูุง ุจุนุฏ ุงูุตุฏูุฉ" if total>=31 else "ุฃูู ูู ุงูุนุชุจุฉ ุงููุคุดุฑุฉ"
    badge = "warn" if total>=31 else "ok"
    body = f"<div class='card'><h3>ุงููุฌููุน: {total} / 60</h3><span class='badge {badge}'>{flag}</span><a class='btn' href='/cbt'>ุนูุฏุฉ</a></div>"
    return render_template_string(BASE, title="PCL-5 ูุชูุฌุฉ", heading="PCL-5 โ ุงููุชูุฌุฉ", body=body)

# ============ ASRS v1.1 (ADHD ุจุงูุบูู โ ุฌุฒุก A: 6 ุฃุณุฆูุฉ) ============
ASRS_A = [
    "ูู ูุฑุฉ ุชูุงุฌู ุตุนูุจุฉ ูู ุฅููุงุก ุงูุชูุงุตูู ุนูุฏ ุฅููุงู ูููุฉุ",
    "ูู ูุฑุฉ ุชูุงุฌู ุตุนูุจุฉ ูู ุชูุธูู ุงูููุงูุ",
    "ูู ูุฑุฉ ุชุคุฌู ุงูุจุฏุก ุจููุงู ุชุชุทูุจ ุฌูุฏูุงุ",
    "ูู ูุฑุฉ ุชุชุญุฑู ุฃู ุชุดุนุฑ ุจุงูุชูููู ุนูุฏ ุงูุฌููุณ ุทููููุงุ",
    "ูู ูุฑุฉ ุชุดุนุฑ ุจูุฑุท ุงููุดุงุท ูุชูุฏูุนุ",
    "ูู ูุฑุฉ ุชูุณู ุงูููุงุนูุฏ ุฃู ุงูุงูุชุฒุงูุงุชุ",
]
ASRS_SCALE = [("ุฃุจุฏูุง",0),("ูุงุฏุฑูุง",1),("ุฃุญูุงููุง",2),("ุบุงูุจูุง",3),("ุฏุงุฆููุง",4)]

@cbt_bp.route("/asrs", methods=["GET","POST"])
def asrs():
    if request.method=="GET":
        return _render_test("ASRS v1.1", "ASRS v1.1 โ ูุญุต ADHD (ุจุงูุบูู)", ASRS_A, ASRS_SCALE, "/cbt/asrs")
    total = _score_from_form(len(ASRS_A))
    flag = "ูุชูุฌุฉ ุชุดูุฑ ูุงุญุชูุงู ADHD โ ูููุตุญ ุจุชูููู ุณุฑูุฑู" if total>=12 else "ุฃูู ูู ุงูุนุชุจุฉ ุงููุคุดุฑุฉ"
    badge = "warn" if total>=12 else "ok"
    body = f"<div class='card'><h3>ุงููุฌููุน: {total} / 24</h3><span class='badge {badge}'>{flag}</span><a class='btn' href='/cbt'>ุนูุฏุฉ</a></div>"
    return render_template_string(BASE, title="ASRS ูุชูุฌุฉ", heading="ASRS โ ุงููุชูุฌุฉ", body=body)

# ============ OCI-R (ูุณูุงุณ ููุฑู ูุฎุชุตุฑ) ============
OCI_ITEMS = [
    "ุฃุชุญูู ูุฑุงุฑูุง ูู ุงูุฃุดูุงุก (ุงูุฃุจูุงุจ/ุงูุฃุฌูุฒุฉ)",
    "ุฃุบุณู ูุฏู ุจุดูู ููุฑุท ุฃู ุฃุชุฌูุจ ุงูุชููุซ",
    "ุฃุนุฏู ุฃู ุฃุฑุชุจ ุงูุฃุดูุงุก ุจุดูู ููุฑู",
    "ุฃุชุนุฑุถ ูุฃููุงุฑ ูุชุทููุฉ ูุฒุนุฌุฉ",
    "ุฃุญุชูุธ ุจุฃุดูุงุก ุบูุฑ ูุงุฒูุฉ (ุงูุชูุงุฒ)",
    "ุฃุดุนุฑ ุจุถุฑูุฑุฉ ุงูุชูุงุซู/ุงูุฏูุฉ ูู ุงูุฃุดูุงุก"
]
OCI_SCALE = [("ูุง ุฃุฒุนุฌ ุฅุทูุงููุง",0),("ูููููุง",1),("ูุชูุณุท",2),("ุดุฏูุฏ",3),("ุดุฏูุฏ ุฌุฏูุง",4)]

@cbt_bp.route("/oci", methods=["GET","POST"])
def oci():
    if request.method=="GET":
        return _render_test("OCI-R", "OCI-R โ ูุคุดุฑุงุช ุงููุณูุงุณ ุงูููุฑู", OCI_ITEMS, OCI_SCALE, "/cbt/oci")
    total = _score_from_form(len(OCI_ITEMS))
    flag = "ูุคุดุฑุงุช ููุญูุธุฉ ููุณูุงุณ ููุฑู" if total>=14 else "ุถูู ุงูุญุฏูุฏ"
    badge = "warn" if total>=14 else "ok"
    body = f"<div class='card'><h3>ุงููุฌููุน: {total} / 24</h3><span class='badge {badge}'>{flag}</span><a class='btn' href='/cbt'>ุนูุฏุฉ</a></div>"
    return render_template_string(BASE, title="OCI-R ูุชูุฌุฉ", heading="OCI-R โ ุงููุชูุฌุฉ", body=body)

# ============ AUDIT / AUDIT-C ============
AUDITC_ITEMS = [
    "ูู ูุฑุฉ ุชุดุฑุจ ูุดุฑูุจุงุช ูุญูููุฉุ",
    "ูู ุนุฏุฏ ุงููุดุฑูุจุงุช ูู ููู ุงูุดุฑุจ ุงููุนุชุงุฏุ",
    "ูู ูุฑุฉ ุชุดุฑุจ 6 ูุดุฑูุจุงุช ุฃู ุฃูุซุฑ ูู ููุงุณุจุฉ ูุงุญุฏุฉุ"
]
AUDITC_SCALE = [
    [("ุฃุจุฏูุง",0),("ุดูุฑููุง ุฃู ุฃูู",1),("2-4 ูุฑุงุช/ุดูุฑ",2),("2-3 ูุฑุงุช/ุฃุณุจูุน",3),("4+ ูุฑุงุช/ุฃุณุจูุน",4)],
    [("1-2",0),("3-4",1),("5-6",2),("7-9",3),("10+",4)],
    [("ุฃุจุฏูุง",0),("ุฃูู ูู ุดูุฑู",1),("ุดูุฑู",2),("ุฃุณุจูุนู",3),("ูููููุง ุชูุฑูุจูุง",4)],
]
@cbt_bp.route("/audit", methods=["GET","POST"])
def audit():
    if request.method=="GET":
        blocks=[]
        for i,q in enumerate(AUDITC_ITEMS,1):
            opts = "".join([f"<label><input type='radio' name='q{i}' value='{val}' required> {lab}</label>" for lab,val in AUDITC_SCALE[i-1]])
            blocks.append(f"<div class='q'><b>{i}.</b> {q}<div>{opts}</div></div>")
        form = "<form method='post'>"+"".join(blocks)+"<button class='btn'>ุงุญุณุจ</button></form>"
        return render_template_string(BASE, title="AUDIT-C", heading="AUDIT-C โ ูุญูู", body=f"<div class='card'>{form}</div>")
    total = _score_from_form(3)
    flag = "ูุคุดุฑ ูุฎุงุทุฑุฉ ูุญูููุฉ" if total>=5 else "ูุญุฏูุฏ"
    badge = "warn" if total>=5 else "ok"
    body = f"<div class='card'><h3>ุงููุฌููุน: {total} / 12</h3><span class='badge {badge}'>{flag}</span><a class='btn' href='/cbt'>ุนูุฏุฉ</a></div>"
    return render_template_string(BASE, title="AUDIT-C ูุชูุฌุฉ", heading="AUDIT-C โ ุงููุชูุฌุฉ", body=body)

# ============ BRS (ุงูุตููุฏ) ============
BRS_ITEMS = [
    "ุฃุชุนุงูู ุจุณุฑุนุฉ ุจุนุฏ ุงูุฃููุงุช ุงูุตุนุจุฉ",
    "ุฃููู ููุงุฑุชุฏุงุฏ ูู ุงููุดููุงุช",
    "ูู ุงูุตุนุจ ุนููู ุฃู ุฃุนูุฏ ูุทุจูุนุชู ุจุนุฏ ุญุฏุซ ุตุนุจ (ุนูุณู)",
    "ูุง ุฃุดุนุฑ ุจุงูุฅุญุจุงุท ููุชุฑุฉ ุทูููุฉ (ุนูุณู)",
    "ุฃุชุนุงูู ูุน ุงูุถุบูุท ุจูุนุงููุฉ",
    "ุฃููู ููุนูุฏุฉ ุณุฑูุนูุง ุจุนุฏ ุงููุฑุถ ุฃู ุงูุตุนูุจุงุช"
]
BRS_SCALE = [("ูุง ุฃูุงูู ุฅุทูุงููุง",1),("ูุง ุฃูุงูู",2),("ูุญุงูุฏ",3),("ุฃูุงูู",4),("ุฃูุงูู ุชูุงููุง",5)]
BRS_REVERSE = {3,4}

@cbt_bp.route("/brs", methods=["GET","POST"])
def brs():
    if request.method=="GET":
        return _render_test("BRS", "BRS โ ูููุงุณ ุงูุตููุฏ", BRS_ITEMS, BRS_SCALE, "/cbt/brs")
    total = 0
    for i in range(1, len(BRS_ITEMS)+1):
        v = int(request.form.get(f"q{i}",1))
        total += (6-v) if i in BRS_REVERSE else v
    avg = round(total/6,2)
    if   avg<3:  sev="ุตููุฏ ููุฎูุถ"; color="warn"
    elif avg<4.3: sev="ูุชูุณุท"; color="mid"
    else: sev="ูุฑุชูุน"; color="ok"
    body = f"<div class='card'><h3>ุงููุชูุณุท: {avg} / 5</h3><span class='badge {color}'>{sev}</span><a class='btn' href='/cbt'>ุนูุฏุฉ</a></div>"
    return render_template_string(BASE, title="BRS ูุชูุฌุฉ", heading="BRS โ ุงููุชูุฌุฉ", body=body)
