# -*- coding: utf-8 -*-
# cbt_suite.py โ ููุญุฉ CBT ูุชูุงููุฉ: ุงุฎุชุจุงุฑุงุช (PHQ-9, GAD-7, PCL-5, DASS-21)
# + ุฃุฏูุงุช ุนูุงุฌูุฉ (ุณุฌู ุงูุฃููุงุฑุ ุงูุชูุดูุท ุงูุณููููุ ุงูุชุนุฑุถ) + ุฎุทุฉ ุฌูุณุงุช

from __future__ import annotations
from flask import Blueprint, render_template_string, request, redirect, url_for
from datetime import datetime

cbt_bp = Blueprint("cbt", __name__, url_prefix="/cbt")

# ============================== ุฃุฏูุงุช ุนุงูุฉ ==============================
def now_year():
    try:
        return datetime.now().year
    except Exception:
        return 2025

def _val_int(v, default=0):
    try:
        return int(v)
    except Exception:
        return default

# ============================== ุงููุงูุจ ุงูุนุงู ==============================
BASE = """
<!doctype html><html lang="ar" dir="rtl">
<head>
<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>{{title}}</title>
<link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;600;800&display=swap" rel="stylesheet">
<style>
:root{--bg1:#0b3a75;--bg2:#0a65b0;--gold:#f4b400;--w:#fff}
*{box-sizing:border-box}
body{margin:0;font-family:"Tajawal",system-ui;background:linear-gradient(135deg,var(--bg1),var(--bg2)) fixed;color:var(--w)}
.wrap{max-width:1180px;margin:24px auto;padding:16px}
.bar{display:flex;justify-content:space-between;gap:10px;align-items:center}
a.btn,button.btn{display:inline-block;background:linear-gradient(180deg,#ffd86a,#f4b400);color:#2b1b02;border-radius:14px;padding:10px 14px;text-decoration:none;font-weight:800;border:none;cursor:pointer}
.card{background:rgba(255,255,255,.08);border:1px solid rgba(255,255,255,.18);border-radius:16px;padding:18px;margin:10px 0}
.grid{display:grid;grid-template-columns:repeat(2,1fr);gap:14px}
@media(max-width:980px){.grid{grid-template-columns:1fr}}
label{display:block;margin:6px 0 4px;color:#ffe28a}
input[type=text],textarea,select{width:100%;background:rgba(255,255,255,.12);color:#fff;border:1px solid rgba(255,255,255,.25);border-radius:12px;padding:10px}
textarea{min-height:120px;resize:vertical}
small{opacity:.85}
.badge{display:inline-block;padding:4px 10px;border-radius:999px;font-size:.85rem;margin:2px 0}
.ok{background:#16a34a}.warn{background:#ef4444}.mid{background:#f59e0b}.info{background:#0284c7}
table{width:100%;border-collapse:collapse}
th,td{border-bottom:1px solid rgba(255,255,255,.18);padding:8px;text-align:right}
th{color:#ffe28a}
</style>
</head>
<body>
<div class="wrap">
  <div class="bar">
    <h2 style="margin:0">{{heading}}</h2>
    <div>
      <a class="btn" href="/">ุงููุงุฌูุฉ</a>
      <a class="btn" href="{{ url_for('cbt.dashboard') }}">ููุญุฉ CBT</a>
    </div>
  </div>
  {{ body|safe }}
  <p style="opacity:.7;margin-top:18px">ยฉ {{year}} ุนุฑุจู ุณุงููู โ ุงูุนูุงุฌ ุงูุณูููู ุงููุนุฑูู</p>
</div>
</body></html>
"""

# ============================== ููุญุฉ CBT ==============================
@cbt_bp.route("/")
def dashboard():
    body = """
    <div class="card">
      <p>ููุญุฉ ูุชูุงููุฉ ุชุดูู ุงุฎุชุจุงุฑุงุช ููุงุณูุฉ + ุฃุฏูุงุช CBT ุนูููุฉ + ุชูููุฏ ุฎุทุฉ ุฌูุณุงุช ุฃูููุฉ.</p>
    </div>
    <div class="grid">
      <div class="card">
        <h3>๐งช ุงุฎุชุจุงุฑุงุช ุงูููุงุณ</h3>
        <ul>
          <li><a class="btn" href="{{ url_for('cbt.phq9') }}">PHQ-9 โ ุงูุงูุชุฆุงุจ</a></li>
          <li><a class="btn" href="{{ url_for('cbt.gad7') }}">GAD-7 โ ุงูููู ุงูุนุงู</a></li>
          <li><a class="btn" href="{{ url_for('cbt.pcl5') }}">PCL-5 โ ูุง ุจุนุฏ ุงูุตุฏูุฉ</a></li>
          <li><a class="btn" href="{{ url_for('cbt.dass21') }}">DASS-21 โ ุงูุชุฆุงุจ/ููู/ุชูุชุฑ</a></li>
        </ul>
      </div>
      <div class="card">
        <h3>๐ก ุฃุฏูุงุช CBT</h3>
        <ul>
          <li><a class="btn" href="{{ url_for('cbt.thought_record') }}">ุณุฌู ุงูุฃููุงุฑ (REBT/CBT)</a></li>
          <li><a class="btn" href="{{ url_for('cbt.behavioral_activation') }}">ุงูุชูุดูุท ุงูุณูููู (BA)</a></li>
          <li><a class="btn" href="{{ url_for('cbt.exposures') }}">ุณูู ุงูุชุนุฑุถ (ERP)</a></li>
          <li><a class="btn" href="{{ url_for('cbt.session_plan') }}">ุชูููุฏ ุฎุทุฉ ุฌูุณุงุช</a></li>
        </ul>
      </div>
    </div>
    <div class="card">
      <h3>ุฑูุงุจุท ุณุฑูุนุฉ</h3>
      <div style="display:flex;flex-wrap:wrap;gap:10px">
        <a class="btn" href="/dsm">ุฏุฑุงุณุฉ ุงูุญุงูุฉ + DSM</a>
        <a class="btn" href="{{ url_for('cbt.phq9') }}">PHQ-9</a>
        <a class="btn" href="{{ url_for('cbt.gad7') }}">GAD-7</a>
        <a class="btn" href="{{ url_for('cbt.pcl5') }}">PCL-5</a>
        <a class="btn" href="{{ url_for('cbt.dass21') }}">DASS-21</a>
      </div>
    </div>
    """
    return render_template_string(BASE, title="CBT | ููุญุฉ", heading="ููุญุฉ CBT ุงููุชูุงููุฉ", body=body, year=now_year())

# ============================== PHQ-9 ==============================
PHQ9_Q = [
"ููุฉ ุงูุงูุชูุงู ุฃู ุงููุชุนุฉ ุจุงูููุงู ุจุงูุฃุดูุงุก",
"ุงูุดุนูุฑ ุจุงูุงูุชุฆุงุจ ุฃู ุงููุฃุณ",
"ุตุนูุจุฉ ุงูููู ุฃู ูุฑุท ุงูููู",
"ุงูุฅุฑูุงู ุฃู ููุฉ ุงูุทุงูุฉ",
"ููุฉ ุงูุดููุฉ ุฃู ูุฑุท ุงูุฃูู",
"ุงูุดุนูุฑ ุจุงูุณูุก ุชุฌุงู ููุณู ุฃู ุฃูู ูุงุดู",
"ุตุนูุจุฉ ุงูุชุฑููุฒ (ูุฑุงุกุฉ/ูุดุงูุฏุฉ)",
"ุงูุญุฑูุฉ ุฃู ุงูููุงู ุจุจุทุก ุดุฏูุฏ ุฃู ุงูุนูุณ (ุชูุชุฑ)",
"ุฃููุงุฑ ุจุฃูู ุชูุฏ ุฅูุฐุงุก ููุณู ุฃู ุงูููุช"
]
PHQ_OPTS = [("0","ุฃุจุฏูุง"),("1","ุนุฏุฉ ุฃูุงู"),("2","ุฃูุซุฑ ูู ูุตู ุงูุฃูุงู"),("3","ุชูุฑูุจูุง ูู ููู")]

def phq9_level(score:int)->str:
    if score<=4: return "ุฎููู ุฌุฏูุง"
    if score<=9: return "ุฎููู"
    if score<=14: return "ูุชูุณุท"
    if score<=19: return "ูุชูุณุท-ุดุฏูุฏ"
    return "ุดุฏูุฏ"

@cbt_bp.route("/phq9", methods=["GET","POST"])
def phq9():
    total,html_result = 0,""
    if request.method=="POST":
        total = sum(_val_int(request.form.get(f"q{i}",0)) for i in range(1,10))
        level = phq9_level(total)
        note = "ููุถูู ูุชุงุจุนุฉ ุชูููู ุณุฑูุฑู ุฅู ูุงูุช ุงูุดุฏุฉ ูุชูุณุทุฉ ูุฃุนูู."
        html_result = f"""
        <div class="card">
          <h3>ุงููุชูุฌุฉ</h3>
          <p>ุงููุฌููุน: <strong>{total}</strong> โ ุงูุดุฏุฉ:
            <span class="badge {'warn' if total>=15 else 'mid' if total>=10 else 'ok'}">{level}</span></p>
          <small>{note}</small>
        </div>"""
    qs = "".join(f"""
      <div class="card">
        <label>({i}) {PHQ9_Q[i-1]}</label>
        <select name="q{i}">{"".join([f'<option value="{v}">{t}</option>' for v,t in PHQ_OPTS])}</select>
      </div>""" for i in range(1,10))
    body = f"""
    <form method="post">
      {qs}
      <button class="btn" type="submit">ุญุณุงุจ PHQ-9</button>
    </form>
    {html_result}
    """
    return render_template_string(BASE, title="PHQ-9", heading="PHQ-9 โ ูููุงุณ ุงูุงูุชุฆุงุจ", body=body, year=now_year())

# ============================== GAD-7 ==============================
GAD7_Q = [
"ุงูุดุนูุฑ ุจุงูุชูุชุฑ ุฃู ุงูููู ุฃู ุนูู ุงูุฃุนุตุงุจ",
"ุนุฏู ุงููุฏุฑุฉ ุนูู ุงูุชููู ุนู ุงูููู ุฃู ุงูุชุญูู ุจู",
"ุงูููู ุงูููุฑุท ุญูู ูุฎุชูู ุงูุฃููุฑ",
"ุตุนูุจุฉ ุงูุงุณุชุฑุฎุงุก",
"ุงูุชูููู ุฃู ุนุฏู ุงููุฏุฑุฉ ุนูู ุงูุฌููุณ ุจูุฏูุก",
"ุณูููุฉ ุงูุงูุฒุนุงุฌ ุฃู ุงูุชููุฌ",
"ุงูุดุนูุฑ ุจุงูุฎูู ูุฃู ุดูุฆูุง ูุธูุนูุง ุณูุญุฏุซ"
]
def gad7_level(s:int)->str:
    if s<=4: return "ุฎููู"
    if s<=9: return "ูุชูุณุท"
    if s<=14:return "ูุชูุณุท-ุดุฏูุฏ"
    return "ุดุฏูุฏ"

@cbt_bp.route("/gad7", methods=["GET","POST"])
def gad7():
    total,html_result = 0,""
    if request.method=="POST":
        total = sum(_val_int(request.form.get(f"q{i}",0)) for i in range(1,8))
        level = gad7_level(total)
        html_result = f"""
        <div class="card">
          <h3>ุงููุชูุฌุฉ</h3>
          <p>ุงููุฌููุน: <strong>{total}</strong> โ ุงูุดุฏุฉ:
            <span class="badge {'warn' if total>=15 else 'mid' if total>=10 else 'ok'}">{level}</span></p>
        </div>"""
    qs = "".join(f"""
      <div class="card">
        <label>({i}) {GAD7_Q[i-1]}</label>
        <select name="q{i}">{"".join([f'<option value="{v}">{t}</option>' for v,t in PHQ_OPTS])}</select>
      </div>""" for i in range(1,8))
    body = f"""
    <form method="post">
      {qs}
      <button class="btn" type="submit">ุญุณุงุจ GAD-7</button>
    </form>
    {html_result}
    """
    return render_template_string(BASE, title="GAD-7", heading="GAD-7 โ ูููุงุณ ุงูููู ุงูุนุงู", body=body, year=now_year())

# ============================== PCL-5 (PTSD) ==============================
PCL5_Q = [
"ุฐูุฑูุงุช ุงูุชุญุงููุฉ ูุฒุนุฌุฉ ุญูู ุงูุญุฏุซ ุงูุตุงุฏู",
"ุฃุญูุงู/ููุงุจูุณ ูุฒุนุฌุฉ ุชุชุนูู ุจุงูุญุฏุซ",
"ุชุตุฑูุงุช ุฃู ุดุนูุฑ ููุฃู ุงูุญุฏุซ ูุชูุฑุฑ (ููุงุด ุจุงู)",
"ุงูุฒุนุงุฌ ุดุฏูุฏ ุนูุฏ ุงูุชุนุฑูุถ ููุฐููุฑุงุช ุงูุญุฏุซ",
"ุชูุงุนู ุฌุณุฏู ููู ุนูุฏ ุงูุชุนุฑูุถ ูููุฐูุฑุงุช",
"ุชุฌููุจ ุงูุฐูุฑูุงุช ุฃู ุงูุฃููุงุฑ ุฃู ุงููุดุงุนุฑ ุงููุชุนููุฉ ุจุงูุญุฏุซ",
"ุชุฌููุจ ุงูุชุฐููุฑุงุช ุงูุฎุงุฑุฌูุฉ (ุฃูุงูู/ุฃุดุฎุงุต/ุฃูุดุทุฉ)",
"ุตุนูุจุฉ ุชุฐูุฑ ุฌูุงูุจ ูููุฉ ูู ุงูุญุฏุซ",
"ูุนุชูุฏุงุช ุณูุจูุฉ ูุณุชูุฑูุฉ ุนู ุงูุฐุงุช/ุงูุขุฎุฑูู/ุงูุนุงูู",
"ููู ุงูุฐุงุช ุฃู ุงูุขุฎุฑูู ุจุดูู ููุฑุท",
"ุญุงูุฉ ุนุงุทููุฉ ุณูุจูุฉ ูุณุชูุฑูุฉ (ุฎูู/ุบุถุจ/ุฐูุจ/ุนุงุฑ)",
"ุงูุนุฏุงู ุงูุงูุชูุงู/ุงูุงุจุชุนุงุฏ ุนู ุงูุฃูุดุทุฉ",
"ุงูุงุจุชุนุงุฏ ุนู ุงูุขุฎุฑูู",
"ุตุนูุจุฉ ุงูุดุนูุฑ ุจุงููุดุงุนุฑ ุงูุฅูุฌุงุจูุฉ",
"ุชููุฌ/ููุจุงุช ุบุถุจ",
"ุณููู ูุชููุฑ ุฃู ูุฏููุฑ ููุฐุงุช",
"ูุฑุท ุงูููุธุฉ",
"ูุดุงูู ุงูุชุฑููุฒ",
"ุตุนูุจุฉ ุงูููู"
]
PCL_OPTS = [("0","ุฃุจุฏูุง"),("1","ูููููุง"),("2","ูุชูุณุท"),("3","ูุซูุฑูุง"),("4","ุดุฏูุฏ ุฌุฏูุง")]

def pcl5_flag(total:int)->str:
    if total>=33: return "ูุคุดุฑุงุช ูููุฉ ูุงุญุชูุงู PTSD โ ููุฒู ุชูููู ุณุฑูุฑู"
    if total>=20: return "ุฃุนุฑุงุถ ููุญูุธุฉ ุชุญุชุงุฌ ูุชุงุจุนุฉ"
    return "ููุฎูุถ"

@cbt_bp.route("/pcl5", methods=["GET","POST"])
def pcl5():
    total,html_result = 0,""
    if request.method=="POST":
        total = sum(_val_int(request.form.get(f"q{i}",0)) for i in range(1,20))
        flag = pcl5_flag(total)
        html_result = f"""
        <div class="card">
          <h3>ุงููุชูุฌุฉ</h3>
          <p>ุงููุฌููุน: <strong>{total}</strong> โ ุฅุดุงุฑุฉ:
            <span class="badge {'warn' if total>=33 else 'mid' if total>=20 else 'ok'}">{flag}</span></p>
        </div>"""
    qs = "".join(f"""
      <div class="card">
        <label>({i}) {PCL5_Q[i-1]}</label>
        <select name="q{i}">{"".join([f'<option value="{v}">{t}</option>' for v,t in PCL_OPTS])}</select>
      </div>""" for i in range(1,20))
    body = f"""
    <form method="post">
      {qs}
      <button class="btn" type="submit">ุญุณุงุจ PCL-5</button>
    </form>
    {html_result}
    """
    return render_template_string(BASE, title="PCL-5", heading="PCL-5 โ ูููุงุณ ูุง ุจุนุฏ ุงูุตุฏูุฉ", body=body, year=now_year())

# ============================== DASS-21 ==============================
DASS_Q = [
"ุฃุฌุฏ ุตุนูุจุฉ ูู ุชูุฏุฆุฉ ููุณู", "ุฃุดุนุฑ ุจุฌูุงู ูู ุงููู", "ูุง ุฃุฑู ุฃู ูุชุนุฉ ูู ุงูุฃุดูุงุก",
"ุฃุนุงูู ุตุนูุจุฉ ูู ุงูุชููุณ ุฏูู ูุฌููุฏ", "ุฃุฌุฏ ุตุนูุจุฉ ูู ุงููุจุงุฏุฑุฉ ุจุงูุฃุดูุงุก",
"ุฃุจุงูุบ ูู ุฑุฏูุฏ ูุนูู ุนูู ุงูููุงูู", "ุฃุดุนุฑ ุจุงูุงุฑุชุฌุงู", "ุฃุณุชุฎุฏู ุงููุซูุฑ ูู ุงูุทุงูุฉ ุงูุนุตุจูุฉ",
"ูุง ุฃุณุชุทูุน ุชุญููู ุฃู ุดูุก", "ุฃุดุนุฑ ุจุงูููุงุฑ ุนุตุจู ุนูู ูุดู ุงูุญุฏูุซ",
"ุบูุฑ ูุงุฏุฑ ุนูู ุงูุดุนูุฑ ุจุฃู ุฅูุฌุงุจูุฉ", "ุฃุดุนุฑ ุจุฎูู ุจุฏูู ุณุจุจ ูุฌูู",
"ุฃุดุนุฑ ุจุงูุญุฒู ูุงูุงูุชุฆุงุจ", "ุฃููุฏ ุงูุตุจุฑ ุจุณูููุฉ", "ุฃุดุนุฑ ุจุงูุฐุนุฑ",
"ูุง ุฃุณุชูุชุน ุจุฃู ุดูุก", "ููุฒุนุฌ ูุตุนุจ ุงูุงุณุชุฑุฎุงุก", "ุฃุดุนุฑ ุจุฅุญุณุงุณ ุงูููู",
"ูุง ุฃูู ุญูุงุณ ูุฃู ุดูุก", "ุฃุดุนุฑ ูุฃูู ุนูู ุญุงูุฉ ุงูุงูููุงุฑ", "ูุง ูุนูู ููุญูุงุฉ"
]
DASS_OPTS = [("0","ูุง ููุทุจู ูุทูููุง"),("1","ููุทุจู ุจุนุถ ุงูุดูุก"),("2","ููุทุจู ูุซูุฑูุง"),("3","ููุทุจู ุฌุฏูุง")]
DASS_IDX_DEP = [3,5,11,13,16,19,21]
DASS_IDX_ANX = [2,4,7,12,15,18,20]
DASS_IDX_STR = [1,6,8,9,10,14,17]

def _sum_indices(vals, idxs): return sum(vals[i-1] for i in idxs)
def dass_level_dep(s):
    if s<10: return "ุทุจูุนู"
    if s<14: return "ุฎููู"
    if s<21: return "ูุชูุณุท"
    if s<28: return "ุดุฏูุฏ"
    return "ุดุฏูุฏ ุฌุฏูุง"
def dass_level_anx(s):
    if s<8: return "ุทุจูุนู"
    if s<10: return "ุฎููู"
    if s<15: return "ูุชูุณุท"
    if s<20: return "ุดุฏูุฏ"
    return "ุดุฏูุฏ ุฌุฏูุง"
def dass_level_str(s):
    if s<15: return "ุทุจูุนู"
    if s<19: return "ุฎููู"
    if s<26: return "ูุชูุณุท"
    if s<34: return "ุดุฏูุฏ"
    return "ุดุฏูุฏ ุฌุฏูุง"

@cbt_bp.route("/dass21", methods=["GET","POST"])
def dass21():
    html_result = ""
    if request.method=="POST":
        vals = [_val_int(request.form.get(f"q{i}",0)) for i in range(1,22)]
        dep = _sum_indices(vals, DASS_IDX_DEP)*2
        anx = _sum_indices(vals, DASS_IDX_ANX)*2
        st  = _sum_indices(vals, DASS_IDX_STR)*2
        html_result = f"""
        <div class="card">
          <h3>ุงููุชูุฌุฉ</h3>
          <table>
            <tr><th>ุงูุชุฆุงุจ</th><td>{dep}</td><td><span class="badge {'warn' if dep>=28 else 'mid' if dep>=14 else 'ok'}">{dass_level_dep(dep)}</span></td></tr>
            <tr><th>ููู</th><td>{anx}</td><td><span class="badge {'warn' if anx>=20 else 'mid' if anx>=10 else 'ok'}">{dass_level_anx(anx)}</span></td></tr>
            <tr><th>ุชูุชุฑ</th><td>{st}</td><td><span class="badge {'warn' if st>=34 else 'mid' if st>=19 else 'ok'}">{dass_level_str(st)}</span></td></tr>
          </table>
        </div>
        """
    qs = "".join(f"""
      <div class="card">
        <label>({i}) {DASS_Q[i-1]}</label>
        <select name="q{i}">{"".join([f'<option value="{v}">{t}</option>' for v,t in DASS_OPTS])}</select>
      </div>""" for i in range(1,22))
    body = f"""
    <form method="post">
      {qs}
      <button class="btn" type="submit">ุญุณุงุจ DASS-21</button>
    </form>
    {html_result}
    """
    return render_template_string(BASE, title="DASS-21", heading="DASS-21 โ ุงูุชุฆุงุจ/ููู/ุชูุชุฑ", body=body, year=now_year())

# ============================== ุณุฌู ุงูุฃููุงุฑ ==============================
@cbt_bp.route("/thought-record", methods=["GET","POST"])
def thought_record():
    result = ""
    if request.method=="POST":
        situation = request.form.get("situation","").strip()
        thought   = request.form.get("thought","").strip()
        emotion   = request.form.get("emotion","").strip()
        belief    = _val_int(request.form.get("belief","0"))
        evidence_for = request.form.get("evidence_for","").strip()
        evidence_against = request.form.get("evidence_against","").strip()
        alt_thought = request.form.get("alt_thought","").strip()
        new_belief = _val_int(request.form.get("new_belief","0"))
        shift = belief - new_belief
        tag = "ok" if shift>=3 else "mid" if shift>=1 else "info"
        result = f"""
        <div class="card">
          <h3>ุงููุชูุฌุฉ</h3>
          <p>ุงูุฎูุถุช ููุงุนุฉ ุงูููุฑุฉ ูู <strong>{belief}/10</strong> ุฅูู <strong>{new_belief}/10</strong>
             โ ุงูุชุญูู: <span class="badge {tag}">{shift:+}</span></p>
          <table>
            <tr><th>ุงููููู</th><td>{situation}</td></tr>
            <tr><th>ุงูููุฑุฉ ุงูุชููุงุฆูุฉ</th><td>{thought}</td></tr>
            <tr><th>ุงููุดุงุนุฑ</th><td>{emotion}</td></tr>
            <tr><th>ุฃุฏูุฉ ุชุฃููุฏ</th><td>{evidence_for}</td></tr>
            <tr><th>ุฃุฏูุฉ ููู</th><td>{evidence_against}</td></tr>
            <tr><th>ุงูููุฑุฉ ุงูุจุฏููุฉ</th><td>{alt_thought}</td></tr>
          </table>
        </div>
        """
    body = f"""
    <div class="card">
      <form method="post">
        <label>ุงููููู</label><input type="text" name="situation" placeholder="ุฃูู/ูุชู/ูุน ููุ">
        <label>ุงูููุฑุฉ ุงูุชููุงุฆูุฉ</label><input type="text" name="thought" placeholder="ูุง ุงูุฐู ุฎุทุฑ ุจุจุงููุ">
        <label>ุงููุดุงุนุฑ</label><input type="text" name="emotion" placeholder="ุญุฒูุ ูููุ ุบุถุจ โฆ">
        <label>ุฏุฑุฌุฉ ุงูููุงุนุฉ (ูุจู) 0โ10</label><input type="text" name="belief" value="7">
        <label>ุฃุฏูุฉ ุชุฃููุฏ</label><textarea name="evidence_for"></textarea>
        <label>ุฃุฏูุฉ ููู</label><textarea name="evidence_against"></textarea>
        <label>ุงูููุฑุฉ ุงูุจุฏููุฉ ุงููุชูุงุฒูุฉ</label><textarea name="alt_thought"></textarea>
        <label>ุฏุฑุฌุฉ ุงูููุงุนุฉ (ุจุนุฏ) 0โ10</label><input type="text" name="new_belief" value="4">
        <div style="margin-top:10px"><button class="btn">ุญูุธ ุงูุณุฌู</button></div>
      </form>
    </div>
    {result}
    """
    return render_template_string(BASE, title="ุณุฌู ุงูุฃููุงุฑ", heading="ุณุฌู ุงูุฃููุงุฑ (CBT/REBT)", body=body, year=now_year())

# ============================== ุงูุชูุดูุท ุงูุณูููู (BA) ==============================
@cbt_bp.route("/ba", methods=["GET","POST"])
def behavioral_activation():
    result = ""
    if request.method=="POST":
        activities = request.form.get("activities","").strip()
        schedule   = request.form.get("schedule","").strip()
        barriers   = request.form.get("barriers","").strip()
        solutions  = request.form.get("solutions","").strip()
        result = f"""
        <div class="card">
          <h3>ุฎุทุฉ ุชูุดูุท</h3>
          <table>
            <tr><th>ุฃูุดุทุฉ ููุชุนุฉ/ุฐุงุช ูุนูู</th><td>{activities}</td></tr>
            <tr><th>ุฌุฏููุฉ ุฃุณุจูุนูุฉ</th><td>{schedule}</td></tr>
            <tr><th>ุนูุงุฆู</th><td>{barriers}</td></tr>
            <tr><th>ุญููู/ุฎุทูุงุช ุตุบูุฑุฉ</th><td>{solutions}</td></tr>
          </table>
          <small>ุงุจุฏุฃ ุจุฎุทูุงุช ุตุบูุฑุฉ ูุงุจูุฉ ููููุงุณ ูุงููุชุงุจุนุฉ.</small>
        </div>
        """
    body = f"""
    <div class="card">
      <form method="post">
        <label>ุฃูุดุทุฉ ููุชุนุฉ/ุฐุงุช ูุนูู</label><textarea name="activities" placeholder="ุฑูุงุถุฉ ุฎูููุฉุ ุงุชุตุงู ุจุตุฏููุ ููุงูุฉ..."></textarea>
        <label>ุฌุฏููุฉ ุฃุณุจูุนูุฉ</label><textarea name="schedule" placeholder="ุงูุณุจุช: ูุดู 20 ุฏูููุฉโฆ"></textarea>
        <label>ุนูุงุฆู ูุชููุนุฉ</label><textarea name="barriers"></textarea>
        <label>ุญููู ูุฎุทูุงุช ุตุบูุฑุฉ</label><textarea name="solutions"></textarea>
        <div style="margin-top:10px"><button class="btn">ุจูุงุก ุฎุทุฉ</button></div>
      </form>
    </div>
    {result}
    """
    return render_template_string(BASE, title="ุงูุชูุดูุท ุงูุณูููู", heading="ุงูุชูุดูุท ุงูุณูููู (BA)", body=body, year=now_year())

# ============================== ุงูุชุนุฑุถ ุงูุชุฏุฑูุฌู (ERP) ==============================
@cbt_bp.route("/exposures", methods=["GET","POST"])
def exposures():
    result = ""
    if request.method=="POST":
        items = [s.strip() for s in (request.form.get("ladder","") or "").split("\n") if s.strip()]
        ladder = "".join(f"<tr><td>{i+1}</td><td>{x}</td></tr>" for i,x in enumerate(items))
        result = f"""
        <div class="card">
          <h3>ุณูููู ุงูุชุนุฑุถ</h3>
          <table><tr><th>#</th><th>ูููุฉ ุงูุชุนุฑุถ</th></tr>{ladder}</table>
          <small>ุงุจุฏุฃ ูู ุงูุฃุฏูู ููููุง ูุชุฏุฑูุฌ ููุฃุนูู ูุน ููุน ุณููููุงุช ุงูุฃูุงู/ุงูุทููุณ.</small>
        </div>
        """
    body = f"""
    <div class="card">
      <form method="post">
        <label>ุงูุชุจ ุณูููู ุงูุชุนุฑุถ (ุนูุตุฑ ูู ูู ุณุทุฑุ ูู ุงูุฃุณูู ููุฃุตุนุจ)</label>
        <textarea name="ladder" placeholder="ูุซุงู:\nุงูุณูุงู ุนูู ุฌุงุฑ ุฃุนุฑูู\nุงูุชุญุฏุซ ุฏูููุชูู ูู ุงุฌุชูุงุน ุตุบูุฑ\nุนุฑุถ ูุตูุฑ ุฃูุงู ุงููุฑูู\nูููุฉ ุฃูุงู ุฌูููุฑ"></textarea>
        <div style="margin-top:10px"><button class="btn">ุจูุงุก ุงูุณูููู</button></div>
      </form>
    </div>
    {result}
    """
    return render_template_string(BASE, title="ุงูุชุนุฑุถ ุงูุชุฏุฑูุฌู", heading="ุงูุชุนุฑุถ ุงูุชุฏุฑูุฌู (ERP)", body=body, year=now_year())

# ============================== ุฎุทุฉ ุฌูุณุงุช ุขููุฉ ==============================
@cbt_bp.route("/plan", methods=["GET","POST"])
def session_plan():
    result = ""
    if request.method=="POST":
        main_problem = request.form.get("main_problem","").strip()
        goals        = request.form.get("goals","").strip()
        metrics      = request.form.get("metrics","").strip()
        modules      = []
        if request.form.get("use_depression"): modules.append("ุงูุชุฆุงุจ/BA + ุณุฌู ุฃููุงุฑ")
        if request.form.get("use_anxiety"):    modules.append("ููู/ุชุนุฑุถ + ููุงุฑุงุช ุชููุณ/ููุธุฉ")
        if request.form.get("use_trauma"):     modules.append("ุตุฏูุฉ/ุชูุธูู + ูุนุงูุฌุฉ ุชุฏุฑูุฌูุฉ")
        schedule = """
        <ol>
          <li><strong>ุฌูุณุฉ 1:</strong> ุจูุงุก ุนูุงูุฉ + ุตูุงุบุฉ ุญุงูุฉ + ุฃูุฏุงู + ููุงุณ ุฃุณุงุณู (PHQ-9/GAD-7).</li>
          <li><strong>ุฌูุณุฉ 2:</strong> ุชุซููู ููุณู + ููุงุฑุงุช ุชูุธูู (ุชูููุณ/ููุธุฉ) + ูุงุฌุจ ููุฒูู.</li>
          <li><strong>ุฌูุณุฉ 3:</strong> ุณุฌู ุฃููุงุฑ (ุชุญุฏูุฏ ุชุดููุงุช) + ุชุฌุฑุจุฉ ุณููููุฉ ุตุบูุฑุฉ.</li>
          <li><strong>ุฌูุณุฉ 4:</strong> ุชูุดูุท ุณูููู/ุชุนุฑูุถ ุชุฏุฑูุฌู ุญุณุจ ุงูุญุงูุฉ.</li>
          <li><strong>ุฌูุณุฉ 5:</strong> ูุฑุงุฌุนุฉ ุงูุชูุฏูู + ุชุนุฏูู ุฎุทุฉ + ููุงุณุงุช ูุชุงุจุนุฉ.</li>
          <li><strong>ุฌูุณุฉ 6:</strong> ุชุซุจูุช ููุงุณุจ + ุฎุทุฉ ุงูุชูุงุณุฉ + ุฎุชุงู ุฃููู.</li>
        </ol>
        """
        result = f"""
        <div class="card">
          <h3>ุฎุทุฉ ุฌูุณุงุช ูุจุฏุฆูุฉ (6 ุฌูุณุงุช)</h3>
          <table>
            <tr><th>ุงููุดููุฉ ุงูุฑุฆูุณูุฉ</th><td>{main_problem}</td></tr>
            <tr><th>ุงูุฃูุฏุงู</th><td>{goals}</td></tr>
            <tr><th>ูุคุดุฑุงุช ุงููุฌุงุญ</th><td>{metrics}</td></tr>
            <tr><th>ุงููุญุฏุงุช ุงูููุชุฑุญุฉ</th><td>{'ุ '.join(modules) if modules else 'ุชูุญุฏูุฏ ุจุนุฏ ุงูููุงุณ'}</td></tr>
          </table>
          {schedule}
          <small>ุงูุฎุทุฉ ุชูุฌูููุฉ ูุชุชุนุฏู ุญุณุจ ุงูุชูููู ูุงููุชุงุจุนุฉ.</small>
        </div>
        """
    body = f"""
    <div class="card">
      <form method="post">
        <label>ุงููุดููุฉ ุงูุฑุฆูุณูุฉ</label><input name="main_problem" placeholder="ูุซุงู: ุงูุชุฆุงุจ ูุน ููู ุงุฌุชูุงุนู">
        <label>ุงูุฃูุฏุงู</label><textarea name="goals" placeholder="ุฑูุน ุงููุดุงุทุ ุชุญุณูู ุงููููุ ุชุฎููู ุงูููู ุงูุงุฌุชูุงุนู..."></textarea>
        <label>ูุคุดุฑุงุช ุงููุฌุงุญ</label><textarea name="metrics" placeholder="ูุจูุท PHQ-9 ุชุญุช 9ุ ุญุถูุฑ ูุดุงุทูู ุฃุณุจูุนููุง..."></textarea>
        <div class="grid">
          <label><input type="checkbox" name="use_depression"> ูุญุฏุฉ ุงูุชุฆุงุจ (BA + ุฃููุงุฑ)</label>
          <label><input type="checkbox" name="use_anxiety"> ูุญุฏุฉ ููู (ุชุนุฑุถ + ุชูุธูู)</label>
          <label><input type="checkbox" name="use_trauma"> ูุญุฏุฉ ุตุฏูุฉ (ุชูุธูู + ูุนุงูุฌุฉ ุชุฏุฑูุฌูุฉ)</label>
        </div>
        <div style="margin-top:10px"><button class="btn">ุชูููุฏ ุงูุฎุทุฉ</button></div>
      </form>
    </div>
    {result}
    """
    return render_template_string(BASE, title="ุฎุทุฉ ุงูุฌูุณุงุช", heading="ุชูููุฏ ุฎุทุฉ ุฌูุณุงุช (CBT)", body=body, year=now_year())

# ============================== ุฑูุงุจุท ูุฎุชุตุฑุฉ ุขููุฉ (ุจุฏูู ุชุถุงุฑุจ) ==============================
@cbt_bp.route("/thought")
def thought_alias(): 
    return redirect(url_for("cbt.thought_record"))

@cbt_bp.route("/erp")
def erp_alias(): 
    return redirect(url_for("cbt.exposures"))
