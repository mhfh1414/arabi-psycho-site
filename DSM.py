# DSM.py โ ูุฑุฌุน ูุฎุชุตุฑ + ุฎูุงุฑุฒููุฉ ุชุฑุดูุญ diagnose()

from typing import Dict, List, Tuple

HTML = """
<h1>๐ DSM โ ูุฑุฌุน ูุฎุชุตุฑ</h1>
<p class="muted">ูุญุชูู ุชุนูููู ูุจุณูุท ูููุฑุงุฌุนุฉ ููุท.</p>

<h2>ุงุถุทุฑุงุจุงุช ุงูููู</h2>
<ul>
  <li><b>ููู ุนุงู (GAD):</b> ููู ููุฑุท ุฃุบูุจ ุงูุฃูุงู โฅ 6 ุฃุดูุฑ ูุน ุชูุชุฑ/ุชุนุจ/ุตุนูุจุฉ ุชุฑููุฒ.</li>
  <li><b>ููุจุงุช ููุน:</b> ููุจุงุช ููุงุฌุฆุฉ ูู ุงูุฎูู ุงูุดุฏูุฏ + ุฃุนุฑุงุถ ุฌุณุฏูุฉุ ูุนูุจูุง ููู ูู ุงูุชูุฑุงุฑ ูุชุฌููุจ.</li>
  <li><b>ุฑูุงุจ ุงุฌุชูุงุนู:</b> ุฎูู ูู ุชูููู ุงูุขุฎุฑููุ ุชุฌููุจ ููุงูู ุงุฌุชูุงุนูุฉ.</li>
</ul>

<h2>ุงูุงุถุทุฑุงุจุงุช ุงููุฒุงุฌูุฉ</h2>
<ul>
  <li><b>ุงูุชุฆุงุจ ุฌุณูู:</b> ูุฒุงุฌ ููุฎูุถ/ููุฏุงู ูุชุนุฉ + ุฃุนุฑุงุถ ููู/ุดููุฉ/ุทุงูุฉ/ุชุฑููุฒ.</li>
  <li><b>ุซูุงุฆู ุงููุทุจ:</b> ููุจุงุช ูุฒุงุฌ ูุฑุชูุน (ููุณ/ููุณ ุฎููู) ยฑ ุงูุชุฆุงุจ.</li>
</ul>

<h2>ุงููุณูุงุณ ุงูููุฑู (OCD)</h2>
<ul>
  <li>ุฃููุงุฑ ููุญูุฉ ูุชูุฑุฑุฉ + ุฃูุนุงู ููุฑูุฉ ูุชุฎููู ุงููููุ ูุน ุฃุซุฑ ูุธููู.</li>
</ul>

<h2>ุงุถุทุฑุงุจุงุช ุงูุตุฏูุฉ (PTSD)</h2>
<ul>
  <li>ุชุนุฑูุถ ูุญุฏุซ ุตุงุฏูู + ุงุณุชุฑุฌุงุน/ููุงุจูุณ/ุชุฌููุจ/ููุธุฉ ููุฑุทุฉ.</li>
</ul>

<h2>ุงุถุทุฑุงุจุงุช ุทูู ุงูููุตุงู</h2>
<ul>
  <li>ููุงูุณ/ุฃููุงู/ุงุถุทุฑุงุจ ููุงู ุฃู ุณููู + ุชุฏููุฑ ูุธููู.</li>
</ul>

<h2>ุงุถุทุฑุงุจุงุช ุงูุฃูู</h2>
<ul>
  <li><b>ููุฏุงู ุงูุดููุฉ:</b> ุชูููุฏ ุดุฏูุฏ ูููุต ูุฒู ูุตูุฑุฉ ุฌุณุฏ ูุดูููุฉ.</li>
  <li><b>ุงูุดุฑู:</b> ููุจุงุช ุฃูู ูุน ุณููู ุชุนููุถู (ููุก/ูุณูู/ุตูุงู/ุชูุงุฑูู ููุฑุทุฉ).</li>
</ul>

<h2>ูุฑุท ุงูุญุฑูุฉ ูุชุดุชูุช ุงูุงูุชุจุงู (ADHD)</h2>
<ul>
  <li>ุนุฏู ุงูุชุจุงู/ูุฑุท ุญุฑูุฉ/ุงูุฏูุงุนูุฉ ููุฐ ุงูุทูููุฉ ูุน ุฃุซุฑ ูุธููู.</li>
</ul>

<h2>ุงุถุทุฑุงุจุงุช ุชุนุงุทู ุงูููุงุฏ</h2>
<ul>
  <li>ููุท ูุดููุงุช: ุงุดุชูุงุกุ ุชุญูููุ ุงูุณุญุงุจุ ุงุณุชุฎุฏุงู ุฑุบู ุงูุถุฑุฑ.</li>
</ul>
"""

def main() -> str:
    return HTML

# ุชุณุชูุจู ูุงููุณ request.form ูู /case
# ูุชูุฑุฌูุน ูุงุฆูุฉ [(ุงุณู, ุณุจุจ, ุฏุฑุฌุฉ)]
def diagnose(data: Dict[str, str]) -> List[Tuple[str, str, float]]:
    yes = lambda k: k in data  # ูุฌูุฏ ุงููุฑุจุน ูุนูู True

    picks: List[Tuple[str,str,float]] = []

    # ุงูุชุฆุงุจ
    dep_keys = ["low_mood","anhedonia","sleep_issue","appetite_change","fatigue"]
    dep_score = sum(1 for k in dep_keys if yes(k))
    if dep_score >= 2:
        picks.append((
            "ุงูุชุฆุงุจ โ ุชุฑุดูุญ",
            f"ุฃุนุฑุงุถ ูุฒุงุฌูุฉ ูุชุนุฏุฏุฉ ({dep_score}/{len(dep_keys)})",
            60 + 5*max(0, dep_score-2)
        ))

    # ููู ุนุงู
    gad_keys = ["worry","tension","focus_issue","restlessness"]
    gad_score = sum(1 for k in gad_keys if yes(k))
    if gad_score >= 2:
        picks.append((
            "ููู ุนุงู โ ุชุฑุดูุญ",
            f"ููู ูุณุชูุฑ ูุน ุชูุชุฑ/ุชุฑููุฒ ({gad_score}/{len(gad_keys)})",
            55 + 5*max(0, gad_score-2)
        ))

    # ููุน
    if yes("panic_attacks"):
        sub = int(yes("fear_of_attacks")) + int(yes("panic_avoidance"))
        picks.append((
            "ุงุถุทุฑุงุจ ููุน โ ุชุฑุดูุญ",
            "ููุจุงุช + " + ("ุฎูู ูู ุงูุชูุฑุงุฑ" if yes("fear_of_attacks") else "") + (" ูุชุฌููุจ" if yes("panic_avoidance") else ""),
            60 + 5*sub
        ))

    # ุฑูุงุจ ุงุฌุชูุงุนู
    soc = int(yes("social_avoid")) + int(yes("fear_judgment"))
    if soc >= 2:
        picks.append(("ุฑูุงุจ ุงุฌุชูุงุนู โ ุชุฑุดูุญ","ุชุฌููุจ ุงุฌุชูุงุนู ูุฎูู ูู ุงูุชูููู",60))

    # ูุณูุงุณ ููุฑู
    if yes("obsessions") or yes("compulsions"):
        both = int(yes("obsessions") and yes("compulsions"))
        picks.append(("ูุณูุงุณ ููุฑู โ ุชุฑุดูุญ","ุฃููุงุฑ ููุญูุฉ/ุฃูุนุงู ููุฑูุฉ",60 + 5*both))

    # PTSD
    if yes("trauma_event") and (yes("flashbacks") or yes("nightmares") or yes("trauma_avoid") or yes("hypervigilance")):
        pts = int(yes("flashbacks")) + int(yes("nightmares")) + int(yes("trauma_avoid")) + int(yes("hypervigilance"))
        picks.append(("ุงุถุทุฑุงุจ ูุง ุจุนุฏ ุงูุตุฏูุฉ โ ุชุฑุดูุญ","ุญุฏุซ ุตุงุฏูู + ุฃุนุฑุงุถ ูุงุญูุฉ",60 + 5*min(3, pts)))

    # ุซูุงุฆู ุงููุทุจ
    if yes("elevated_mood") and (yes("decreased_sleep_need") or yes("impulsivity") or yes("grandiosity")):
        mania = int(yes("decreased_sleep_need")) + int(yes("impulsivity")) + int(yes("grandiosity"))
        picks.append(("ุซูุงุฆู ุงููุทุจ โ ุชุฑุดูุญ","ูุฒุงุฌ ูุฑุชูุน + ูุคุดุฑุงุช ููุณ",55 + 5*mania))

    # ููุตุงู/ุฐูุงู
    psych = int(yes("hallucinations")) + int(yes("delusions")) + int(yes("disorganized_speech")) + int(yes("functional_decline"))
    if psych >= 2:
        picks.append(("ุฐูุงููุงุช โ ุชุฑุดูุญ","ุฃุนุฑุงุถ ุฐูุงููุฉ ูุชุนุฏุฏุฉ",55 + 5*min(4, psych)))

    # ุงุถุทุฑุงุจุงุช ุงูุฃูู
    eat = int(yes("restriction")) + int(yes("underweight")) + int(yes("body_image_distort")) + int(yes("binges")) + int(yes("compensatory"))
    if eat >= 2:
        picks.append(("ุงุถุทุฑุงุจ ุฃูู โ ุชุฑุดูุญ","ููุท ุชูููุฏ/ููุจุงุช/ุตูุฑุฉ ุฌุณุฏ",55 + 5*min(3, eat)))

    # ADHD
    adhd = int(yes("inattention")) + int(yes("hyperactivity")) + int(yes("impulsivity_symp")) + int(yes("since_childhood")) + int(yes("functional_impair"))
    if adhd >= 3 and yes("since_childhood"):
        picks.append(("ADHD โ ุชุฑุดูุญ","ุฃุนุฑุงุถ ูุณุชูุฑุฉ ููุฐ ุงูุทูููุฉ ูุน ุฃุซุฑ ูุธููู",60 + 5*min(3, adhd-2)))

    # ุชุนุงุทู ููุงุฏ
    sud = int(yes("craving")) + int(yes("tolerance")) + int(yes("withdrawal")) + int(yes("use_despite_harm"))
    if sud >= 2:
        picks.append(("ุชุนุงุทู ููุงุฏ โ ุชุฑุดูุญ","ุงุดุชูุงุก/ุงูุณุญุงุจ/ุชุญููู/ุงุณุชุฎุฏุงู ุฑุบู ุงูุถุฑุฑ",60 + 5*min(3, sud)))

    # ุชุฑุชูุจ ููุฑุฌุน ุฃุนูู 6
    picks.sort(key=lambda x: x[2], reverse=True)
    return picks[:6] if picks else [("ูุง ุชูุฌุฏ ุชุฑุดูุญุงุช ูููุฉ","ุงูุจูุงูุงุช ุงููุฏุฎูุฉ ุบูุฑ ูุงููุฉ",0.0)]
