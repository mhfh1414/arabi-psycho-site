# -*- coding: utf-8 -*-
# ipb.py โ ุณูุฑูุฑ ููุจ ูุฑุจุท DSM.py / CBT.py / Addiction.py (ุจุฏูู ููุชุจุงุช ุฎุงุฑุฌูุฉ).
# ููุงุณุจ ููุฎุทุฉ ุงููุฌุงููุฉ ุนูู Render. ููุชุดุบูู ูุญูููุง: python ipb.py ุซู ุงูุชุญ http://127.0.0.1:8080

import os
from urllib.parse import parse_qs
from wsgiref.simple_server import make_server

from DSM import DSM
from CBT import CBT
from Addiction import Addiction

PORT = int(os.environ.get("PORT", "8080"))
dsm, cbt, addx = DSM(), CBT(), Addiction()

# ุชุฎุฒูู ูุคูุช ุฏุงุฎู ุงูุฐุงูุฑุฉ (ุบูุฑ ุฏุงุฆู)
STORE = {
    "thoughts": [],     # ุณุฌูุงุช ุฃููุงุฑ
    "activation": [],   # ุชูุดูุท ุณูููู
    "exposure": [],     # ุณูููู ุชุนุฑูุถ
    "weekly": [],       # ูุชุงุจุนุฉ ุฃุณุจูุนูุฉ
    "craving": []       # ุชุชุจูุน ุงูุฑุบุจุฉ (ุฅุฏูุงู)
}

def layout(title: str, body: str) -> bytes:
    html = f"""<!doctype html><html lang="ar" dir="rtl"><head>
<meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>{title}</title>
<style>
body{{font-family:system-ui,Tahoma,Arial;background:#f5f7fb;color:#222;margin:0}}
header{{background:#22395d;color:#fff;padding:14px 18px}}
nav a{{color:#fff;margin-left:14px;text-decoration:none}}
.container{{max-width:1000px;margin:22px auto;background:#fff;padding:18px 18px 60px;border-radius:16px;box-shadow:0 8px 25px rgba(0,0,0,.06)}}
.card{{background:#fafafa;border:1px solid #eee;padding:12px 14px;border-radius:12px;margin:12px 0}}
.table{{width:100%;border-collapse:collapse}}
.table th,.table td{{text-align:right;border:1px solid #eee;padding:8px;vertical-align:top}}
.btns a,.btns button{{display:inline-block;margin:6px 4px;padding:8px 12px;border-radius:10px;border:1px solid #ddd;background:#f4f6ff;cursor:pointer;text-decoration:none;color:#223}}
.note{{background:#fff7d6;border:1px solid #f1d48f;padding:8px 10px;border-radius:8px}}
label{{display:block;margin-top:8px;font-weight:600}} input,textarea,select{{border:1px solid #ddd;border-radius:10px;padding:8px;width:100%}}
footer{{text-align:center;color:#666;padding:22px 0 40px}}
.search{{display:flex;gap:8px;align-items:center;margin:8px 0}}
.search input{{flex:1}}
</style></head><body>
<header><div class="nav"><strong>ุนุฑุจู ุณุงููู</strong>
<nav style="float:left">
  <a href="/">ุงูุฑุฆูุณูุฉ</a>
  <a href="/dsm">DSM</a>
  <a href="/cbt">CBT</a>
  <a href="/addiction">ุนูุงุฌ ุงูุฅุฏูุงู</a>
</nav></div></header>
<div class="container">{body}</div>
<footer><small>ูุญุชูู ุชุซููููโูุง ูุบูู ุนู ุงูุฑุนุงูุฉ ุงูุทุจูุฉ ุงููุชุฎุตุตุฉ.</small></footer>
</body></html>"""
    return html.encode("utf-8")

def home() -> bytes:
    body = """
    <h1>ูุฑุญุจูุง ูุง ุฃุจู ูุงุฑุณ ๐</h1>
    <p>ูุณุฎุฉ ููุจ ููุณูุนุฉ โ ุซูุงุซุฉ ูููุงุช ูุญุชูู + ูุฐุง ุงูููู ููุชุดุบูู. ุจุฏูู ููุชุจุงุช ุฎุงุฑุฌูุฉุ ุฌุงูุฒุฉ ููุฎุทุฉ ุงููุฌุงููุฉ.</p>
    <div class="card">
      <h3>ุงูุฃูุณุงู</h3>
      <ul>
        <li><b>DSM:</b> ููุณูุน ุฌุฏูุง ูุน ูุนุงููุฑ ูุฎุชุตุฑุฉ/ุนูุงูู ุฎุทูุฑุฉ/ุชุดุฎูุต ุชูุฑููู ูููุงููุณ ุชุซููููุฉ.</li>
        <li><b>CBT:</b> ุณุฌู ุฃููุงุฑ ูุชูุฏูุ ุชูุดูุทุ ุณูููู ุชุนุฑูุถุ Beck ูุจุณูุทุ ูุชุงุจุนุฉ ุฃุณุจูุนูุฉุ ุฎุทุฉ ุนูุงุฌุ ุชูุงุฑูู.</li>
        <li><b>ุงูุฅุฏูุงู:</b> ุชุตูููุงุชุ ุงูุณุญุงุจุ ูุฑุงุญู ุนูุงุฌุ ุฏุนู ุบูุฑ ุฏูุงุฆูุ ุฎูุงุฑุงุช ุนุงูุฉุ ุชุชุจูุน ุฑุบุจุฉุ ููุงูุฉ ุงูุชูุงุณ.</li>
      </ul>
      <div class="btns">
        <a href="/dsm">ูุชุญ DSM</a>
        <a href="/cbt">ูุชุญ CBT</a>
        <a href="/addiction">ูุชุญ ุนูุงุฌ ุงูุฅุฏูุงู</a>
      </div>
    </div>
    """
    return layout("ุงูุฑุฆูุณูุฉ", body)

# ================= DSM =================
def page_dsm(query: dict, method: str, environ=None) -> bytes:
    # ุจุญุซ ูุตู ุจุณูุท ุฏุงุฎู DSM
    if method == "POST" and environ:
        try:
            size = int(environ.get("CONTENT_LENGTH","0"))
        except ValueError:
            size = 0
        data = environ["wsgi.input"].read(size).decode("utf-8")
        form = parse_qs(data)
        ูููุฉ = (form.get("q", [""])[0] or "").strip()
        ูุชุงุฆุฌ = dsm.ุจุญุซ_ูุตู(ูููุฉ)
        if not ูุชุงุฆุฌ:
            body = f"<h1>DSM โ ุจุญุซ</h1><p>ูุง ูุชุงุฆุฌ ูู: <b>{ูููุฉ}</b></p><div class='btns'><a href='/dsm'>ุฑุฌูุน</a></div>"
            return layout("DSM โ ุจุญุซ", body)
        links = "".join([f"<li><a href='/dsm/find?d={n}'>{n}</a></li>" for n in ูุชุงุฆุฌ])
        body = f"<h1>DSM โ ูุชุงุฆุฌ ุงูุจุญุซ</h1><ul>{links}</ul><div class='btns'><a href='/dsm'>ุฑุฌูุน</a></div>"
        return layout("DSM โ ุจุญุซ", body)

    cat = query.get("cat", [""])[0]
    dis = query.get("d", [""])[0]
    if dis:
        body = dsm.html_ุงุถุทุฑุงุจ(dis) + "<div class='btns'><a href='/dsm?cat=%s'>ุฑุฌูุน</a> <a href='/dsm'>ุงูุชุตูููุงุช</a></div>" % (cat or "")
        return layout("DSM โ " + dis, body)
    if cat:
        links = " ".join([f"<a class='btns' href='/dsm?cat={cat}&d={n}'>{n}</a>" for n in dsm.ูุงุฆูุฉ_ุงูุงุถุทุฑุงุจุงุช(cat)])
        body = ("<div class='card'><form class='search' method='post' action='/dsm'>"
                "<input name='q' placeholder='ุงุจุญุซ ุฏุงุฎู DSM (ุงุณู/ุฃุนุฑุงุถ/ุชุดุฎูุต ุชูุฑููู)'>"
                "<button type='submit'>ุจุญุซ</button></form></div>")
        body += f"<div class='btns'>{links}</div>" + dsm.html_ุชุตููู(cat) + "<div class='btns'><a href='/dsm'>ูู ุงูุชุตูููุงุช</a></div>"
        return layout("DSM โ " + cat, body)
    items = "".join([f"<li><a href='/dsm?cat={c}'>{c}</a></li>" for c in dsm.ุงูุชุตูููุงุช()])
    search = ("<div class='card'><form class='search' method='post' action='/dsm'>"
              "<input name='q' placeholder='ุงุจุญุซ ุฏุงุฎู DSM'>"
              "<button type='submit'>ุจุญุซ</button></form></div>")
    return layout("DSM โ ุงูุชุตูููุงุช", search + f"<h1>DSM</h1><ul>{items}</ul>")

# ================= CBT =================
def page_cbt_get() -> bytes:
    body = f"""
    <h1>CBT โ ุฃุฏูุงุช ููุณูุนุฉ</h1>
    <div class="card"><h3>ุณุฌู ุงูุฃููุงุฑ (ูุชูุฏู)</h3>{cbt.html_ูููุฐุฌ_ุณุฌู_ุฃููุงุฑ()}</div>
    <div class="card"><h3>ุชูุดูุท ุณูููู โ ุฅุฏุฎุงู ุจูุฏ</h3>{cbt.html_ูููุฐุฌ_ุชูุดูุท()}</div>
    <div class="card"><h3>ุณูููู ุชุนุฑูุถ โ ุฅุถุงูุฉ ุจูุฏ</h3>{cbt.html_ูููุฐุฌ_ุณูู_ุชุนุฑูุถ()}</div>
    <div class="card"><h3>ุงุณุชุจูุงู Beck ุงููุจุณูุท โ ุงูููู</h3>{cbt.html_ุจูู_ูููุฐุฌ('ููู')}</div>
    <div class="card"><h3>ุงุณุชุจูุงู Beck ุงููุจุณูุท โ ุงูุงูุชุฆุงุจ</h3>{cbt.html_ุจูู_ูููุฐุฌ('ุงูุชุฆุงุจ')}</div>
    <div class="card"><h3>ูุชุงุจุนุฉ ุฃุณุจูุนูุฉ</h3>{cbt.html_ูููุฐุฌ_ูุชุงุจุนุฉ()}</div>
    <div class="card"><h3>ุฎุทุฉ ุนูุงุฌ โ ูุงูุจ ูุฎุชุตุฑ</h3>{cbt.html_ูุงูุจ_ุฎุทุฉ_ุนูุงุฌ()}</div>
    <div class="card"><h3>ุชูุงุฑูู ูุณุงูุฏุฉ</h3>{cbt.html_ุชูุงุฑูู()}</div>
    <div class="btns"><a href="/cbt/store">ุนุฑุถ ุงูุณุฌูุงุช ุงููุฎุฒููุฉ ูุคูุชูุง</a></div>
    """
    return layout("CBT", body)

def _parse_form(environ):
    try:
        size = int(environ.get("CONTENT_LENGTH","0"))
    except ValueError:
        size = 0
    data = environ["wsgi.input"].read(size).decode("utf-8")
    return parse_qs(data)

def page_cbt_post(environ, path: str) -> bytes:
    form = _parse_form(environ)

    if path == "/cbt/thought-record":
        rec = {f: (form.get(f,[""])[0] or "").strip() for f in cbt.ุณุฌู_ุงูุฃููุงุฑ_ุญููู}
        STORE["thoughts"].append(rec)
        body = "<h1>ูุชูุฌุฉ ุณุฌู ุงูุฃููุงุฑ</h1>" + cbt.html_ุนุฑุถ_ุณุฌู(rec) + "<div class='btns'><a href='/cbt'>ุฑุฌูุน</a> <button onclick='window.print()'>ุทุจุงุนุฉ</button></div>"
        return layout("CBT โ ุณุฌู ุฃููุงุฑ", body)

    if path == "/cbt/activation":
        row = {f: (form.get(f,[""])[0] or "").strip() for f in cbt.ุชูุดูุท_ุณูููู_ุญููู}
        STORE["activation"].append(row)
        body = "<h1>ุชูุดูุท ุณูููู โ ุขุฎุฑ ุฅุฏุฎุงู</h1>" + cbt.html_ุนุฑุถ_ุชูุดูุท(row) + "<div class='btns'><a href='/cbt/store'>ุนุฑุถ ุงููู</a> <a href='/cbt'>ุฑุฌูุน</a></div>"
        return layout("CBT โ ุชูุดูุท", body)

    if path == "/cbt/exposure":
        row = {f: (form.get(f,[""])[0] or "").strip() for f in cbt.ุณูู_ุชุนุฑูุถ_ุญููู}
        STORE["exposure"].append(row)
        body = "<h1>ุณูููู ุชุนุฑูุถ โ ุขุฎุฑ ุฅุฏุฎุงู</h1>" + cbt.html_ุนุฑุถ_ุณูู(row) + "<div class='btns'><a href='/cbt/store'>ุนุฑุถ ุงููู</a> <a href='/cbt'>ุฑุฌูุน</a></div>"
        return layout("CBT โ ุชุนุฑูุถ", body)

    if path.endswith("/beck/anx") or path.endswith("/beck/dep"):
        vals = []
        for i in range(1, 8):
            try:
                v = int((form.get(f"q{i}",["0"])[0] or "0"))
            except ValueError:
                v = 0
            vals.append(0 if v<0 else (3 if v>3 else v))
        total = sum(vals)
        body = "<h1>ูุชูุฌุฉ ุชูุฏูุฑูุฉ</h1>" + cbt.html_ุจูู_ุนุฑุถ(total, "ููู" if path.endswith("/anx") else "ุงูุชุฆุงุจ") + "<div class='btns'><a href='/cbt'>ุฑุฌูุน</a> <button onclick='window.print()'>ุทุจุงุนุฉ</button></div>"
        return layout("CBT โ Beck", body)

    if path == "/cbt/weekly":
        row = {f: (form.get(f,[""])[0] or "").strip() for f in cbt.ูุชุงุจุนุฉ_ุฃุณุจูุนูุฉ_ุญููู}
        STORE["weekly"].append(row)
        body = "<h1>ูุชุงุจุนุฉ ุฃุณุจูุนูุฉ โ ูุนุงููุฉ</h1>" + cbt.html_ุนุฑุถ_ูุชุงุจุนุฉ(row) + "<div class='btns'><a href='/cbt/store'>ุนุฑุถ ุงููู</a> <a href='/cbt'>ุฑุฌูุน</a> <button onclick='window.print()'>ุทุจุงุนุฉ</button></div>"
        return layout("CBT โ ูุชุงุจุนุฉ", body)

    if path == "/cbt/plan":
        fields = ["ุงูุฃูุฏุงู_ุงูุนุงูุฉ","ุฃูุฏุงู_ูุตูุฑุฉ","ุงูุนูุงุฆู","ุงูุงุณุชุฑุงุชูุฌูุงุช","ุงูุฏุนู_ุงููุชููุฑ","ุฎุทุฉ_ุทุงุฑุฆุฉ","ูุคุดุฑุงุช_ุงูุชูุฏู"]
        row = {f: (form.get(f,[""])[0] or "").strip() for f in fields}
        table = cbt.html_ุนุฑุถ_ุฎุทุฉ(row)
        body = "<h1>ุฎุทุฉ ุนูุงุฌ โ ูุนุงููุฉ</h1>" + table + "<div class='btns'><a href='/cbt'>ุฑุฌูุน</a> <button onclick='window.print()'>ุทุจุงุนุฉ</button></div>"
        return layout("CBT โ ุฎุทุฉ", body)

    return layout("CBT", "<p>ุทูุจ ุบูุฑ ูุนุฑูู.</p>")

def page_cbt_store() -> bytes:
    def render(title, rows, renderer):
        if not rows:
            return f"<div class='card'><h3>{title}</h3><p>ูุง ููุฌุฏ ุจูุงูุงุช ุจุนุฏ.</p></div>"
        parts = [f"<div class='card'><h3>{title}</h3>"]
        for r in rows[::-1][:15]:
            parts.append(renderer(r))
        parts.append("</div>")
        return "\n".join(parts)

    body = "<h1>ุงููุฎุฒูู ูุคูุชูุง</h1>"
    body += render("ุณุฌูุงุช ุฃููุงุฑ", STORE["thoughts"], cbt.html_ุนุฑุถ_ุณุฌู)
    body += render("ุชูุดูุท ุณูููู", STORE["activation"], cbt.html_ุนุฑุถ_ุชูุดูุท)
    body += render("ุณูููู ุชุนุฑูุถ", STORE["exposure"], cbt.html_ุนุฑุถ_ุณูู)
    body += render("ูุชุงุจุนุฉ ุฃุณุจูุนูุฉ", STORE["weekly"], cbt.html_ุนุฑุถ_ูุชุงุจุนุฉ)
    body += "<div class='btns'><a href='/cbt'>ุฑุฌูุน</a></div>"
    return layout("CBT โ ุงููุฎุฒู ุงููุคูุช", body)

# ================= Addiction =================
def page_addiction_get() -> bytes:
    body = """
    <h1>ุนูุงุฌ ุงูุฅุฏูุงู</h1>
    <div class="card">%s</div>
    <div class="card">%s</div>
    <div class="card">%s</div>
    <div class="card">%s</div>
    <div class="card">%s</div>
    <div class="card"><h3>ุฎุทุฉ ููุงูุฉ ูู ุงูุงูุชูุงุณ โ ูููุฐุฌ</h3>%s</div>
    <div class="card"><h3>ุชุชุจูุน ูููู ููุฑุบุจุฉ (Craving)</h3>%s</div>
    """ % (
        addx.html_ุงูููุงุฏ(),
        addx.html_ุงูุณุญุงุจ(),
        addx.html_ูุฑุงุญู(),
        addx.html_ุฏุนู(),
        addx.html_ุฎูุงุฑุงุช(),
        addx.html_ูุงูุจ_ุงูุชูุงุณ(),
        addx.html_ุชุชุจุน_ูููุฐุฌ()
    )
    return layout("ุนูุงุฌ ุงูุฅุฏูุงู", body)

def page_addiction_post(environ, path: str) -> bytes:
    try:
        size = int(environ.get("CONTENT_LENGTH","0"))
    except ValueError:
        size = 0
    data = environ["wsgi.input"].read(size).decode("utf-8")
    form = parse_qs(data)

    if path == "/addiction/relapse-plan":
        fields = ["ูุญูุฒุงุช","ููุงุฑุงุช","ุฏุนู","ููุท"]
        row = {f: (form.get(f,[""])[0] or "").strip() for f in fields}
        body = "<h1>ุฎุทุฉ ููุงูุฉ ูู ุงูุงูุชูุงุณ โ ูุนุงููุฉ</h1>" + addx.html_ุนุฑุถ_ุงูุชูุงุณ(row) + "<div class='btns'><a href='/addiction'>ุฑุฌูุน</a> <button onclick='window.print()'>ุทุจุงุนุฉ</button></div>"
        return layout("ุนูุงุฌ ุงูุฅุฏูุงู โ ุฎุทุฉ", body)

    if path == "/addiction/craving":
        row = {f: (form.get(f,[""])[0] or "").strip() for f in addx.ุชุชุจูุน_ุงูุฑุบุจุฉ_ุญููู}
        STORE["craving"].append(row)
        body = "<h1>ุชุชุจูุน ุงูุฑุบุจุฉ โ ุขุฎุฑ ุฅุฏุฎุงู</h1>" + addx.html_ุชุชุจุน_ุนุฑุถ(row) + "<div class='btns'><a href='/addiction'>ุฑุฌูุน</a> <button onclick='window.print()'>ุทุจุงุนุฉ</button></div>"
        return layout("ุนูุงุฌ ุงูุฅุฏูุงู โ ุชุชุจูุน", body)

    return layout("ุนูุงุฌ ุงูุฅุฏูุงู", "<p>ุทูุจ ุบูุฑ ูุนุฑูู.</p>")

# ================= Router =================
def application(environ, start_response):
    path = environ.get("PATH_INFO","/")
    method = environ.get("REQUEST_METHOD","GET")
    query = parse_qs(environ.get("QUERY_STRING",""))

    if path in ("/",""):
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [home()]

    # DSM
    if path == "/dsm" and method == "GET":
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_dsm(query, "GET")]
    if path == "/dsm" and method == "POST":
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_dsm(query, "POST", environ)]
    if path.startswith("/dsm"):
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_dsm(query, "GET")]

    # CBT
    if path == "/cbt" and method == "GET":
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_cbt_get()]
    if path.startswith("/cbt/") and method == "POST":
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_cbt_post(environ, path)]
    if path == "/cbt/store" and method == "GET":
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_cbt_store()]

    # Addiction
    if path == "/addiction" and method == "GET":
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_addiction_get()]
    if path.startswith("/addiction/") and method == "POST":
        start_response("200 OK",[("Content-Type","text/html; charset=utf-8")]); return [page_addiction_post(environ, path)]

    start_response("404 Not Found",[("Content-Type","text/html; charset=utf-8")])
    return [layout("ุบูุฑ ููุฌูุฏ", "<h1>ุงููุณุงุฑ ุบูุฑ ููุฌูุฏ</h1><div class='btns'><a href='/'>ุงูุฑุฆูุณูุฉ</a></div>")]

if __name__ == "__main__":
    with make_server("", PORT, application) as httpd:
        print(f"Serving on port {PORT} ...")
        httpd.serve_forever()
